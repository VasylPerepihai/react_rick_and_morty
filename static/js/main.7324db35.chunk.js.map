{"version":3,"sources":["Component/Characters/Popup/Popup.js","Component/Characters/Character_item/Character.js","Component/UI/Pagination.js","Component/UI/Filter.js","Component/Characters/Characters_list/Characters.js","Component/Episodes/Episodes.js","App.js","reportWebVitals.js","index.js"],"names":["Popup","this","props","closePopup","user","className","onClick","JSON","stringify","React","Component","Character","state","shopPopup","togglePopup","setState","showPopup","character","name","status","species","gender","image","classname","src","alt","Pagination","test","onPageChange","currentPage","totalPages","disabled","Filter","selectedFilter","filterText","handleSelect","e","target","value","filters","onChange","map","filter","type","placeholder","onFilterApply","Characters","characters","currentPageApi","getCharacters","pageAPI","page","fetch","then","response","json","result","results","info","next","slice","lastIndexOf","pages","changePage","pageToCheck","applyFilter","applyState","preparedCharArray","toLowerCase","includes","id","Episodes","episodes","a","previousArray","episodesArray","getEpisodes","Math","ceil","count","preparedEpisodes","fieldname","episode","air_date","App","selectedTab","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAEaA,EAAb,4JACE,WACE,MAA2BC,KAAKC,MAAzBC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,KACnB,OACE,qBAAKC,UAAU,QAAf,SACE,qBAAKA,UAAU,cAAcC,QAASH,EAAtC,SACGI,KAAKC,UAAUJ,EAAM,KAAM,cANtC,GAA2BK,IAAMC,WCCpBC,EAAb,4MACEC,MAAQ,CACNC,WAAW,GAFf,EAKEC,YAAc,WACZ,EAAKC,SAAS,CAAEC,WAAY,EAAKJ,MAAMI,aAN3C,4CASE,WACE,MAA+Cf,KAAKC,MAAMe,UAAnDC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,OAAQC,EAAtC,EAAsCA,MAC/BN,EAAaf,KAAKW,MAAlBI,UAEP,OACE,sBAAKX,UAAU,iBAAiBC,QAASL,KAAKa,YAA9C,UACE,sBAAKS,UAAU,iBAAf,UACE,0CACUL,KAEV,4CACYC,KAEZ,6CACaC,KAEb,4CACYC,QAGd,qBAAKG,IAAKF,EAAOG,IAAI,YAAYpB,UAAU,oBAC1CW,GACC,cAAC,EAAD,CAAOZ,KAAMH,KAAKC,MAAMe,UAAWd,WAAYF,KAAKa,qBA/B9D,GAA+BL,IAAMC,WCDxBgB,EAAb,4MACEd,MAAQ,CACNe,KAAM,GAFV,4CAKE,WACE,IAAMC,EAAe3B,KAAKC,MAAM0B,aAC1BC,EAAc5B,KAAKC,MAAM2B,YACzBC,EAAa7B,KAAKC,MAAM4B,WAE9B,OACE,qCACE,wBACExB,QAAS,kBAAMsB,EAAaC,EAAc,IAC1CE,SAA0B,IAAhBF,EAFZ,kBAMA,mCAASA,EAAT,OAA0BC,KAC1B,wBACExB,QAAS,kBAAMsB,EAAaC,EAAc,IAC1CE,SAAUF,IAAgBC,EAF5B,yBAnBR,GAAgCrB,IAAMC,WCAzBsB,EAAb,4MACEpB,MAAQ,CACNqB,eAAe,GACfC,WAAW,IAHf,EAMEC,aAAe,SAACC,GACd,EAAKrB,SAAS,CAACkB,eAAgBG,EAAEC,OAAOC,SAP5C,4CAUE,WAAU,IAAD,OACAC,EAAWtC,KAAKC,MAAhBqC,QAEP,OACE,iCACE,yBACEC,SAAUvC,KAAKkC,aACfG,MAAOrC,KAAKW,MAAMqB,eAFpB,UAIE,wBAAQK,MAAM,GAAd,6BAGCC,EAAQE,KAAI,SAACC,GAAD,OACX,wBAAQJ,MAAOI,EAAf,SACGA,GADyBA,SAKhC,uBACEC,KAAK,OACLC,YAAY,YACZN,MAAOrC,KAAKW,MAAMsB,WAClBM,SAAU,SAACJ,GAAD,OAAO,EAAKrB,SAAS,CAACmB,WAAYE,EAAEC,OAAOC,WAEvD,wBACEK,KAAK,SACLrC,QAAS,kBAAM,EAAKJ,MAAM2C,cAAc,EAAKjC,OAAO,IAFtD,oBAMA,wBACE+B,KAAK,SACLrC,QAAS,WACP,EAAKJ,MAAM2C,cAAc,EAAKjC,OAAO,GACrC,EAAKG,SAAS,CACZkB,eAAe,GACfC,WAAW,MANjB,0BAxCR,GAA4BzB,IAAMC,WCGrBoC,EAAb,4MACElC,MAAQ,CACNmC,WAAY,GACZC,eAAgB,EAChBnB,YAAa,EACbC,WAAY,EACZY,QAAO,EACPT,eAAgB,GAChBC,WAAY,IARhB,EAWEe,cAAgB,SAACC,EAASC,GACxBC,MAAM,mDAAD,OAAoDF,IACtDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAEV,EAAKzC,SAAU,CACbgC,WAAW,YAAKS,EAAOC,SACvBT,eAAgBQ,EAAOE,KAAKC,KAAKC,MAAMJ,EAAOE,KAAKC,KAAKE,YAAY,SAAW,GAAK,EACpF/B,WAAY0B,EAAOE,KAAKI,MACxBjC,YAAasB,QApBvB,EA4BEY,WAAa,SAACZ,GACZ,IAAMa,EAAcb,EAAO,IAAM,EAAIA,EAAOA,EAAO,EAE9Ca,EAAc,EAAK,EAAKpD,MAAMoC,eACjC,EAAKC,cAAc,EAAKrC,MAAMoC,eAAiB,EAAGG,GAE7Ca,EAAc,EAAK,EAAKpD,MAAMoC,eACjC,EAAKC,cAAc,EAAKrC,MAAMoC,eAAiB,EAAGG,GAEhD,EAAKpC,SAAS,CAACc,YAAasB,KArCtC,EA0CEc,YAAc,SAACvB,EAAQwB,GACrB,EAAKnD,SAAS,CACZ2B,OAAQwB,EACRjC,eAAgBS,EAAOT,eACvBC,WAAYQ,EAAOR,cA9CzB,uDAwBE,WACEjC,KAAKgD,cAAc,EAAG,KAzB1B,oBAkDE,WACE,MAAsEhD,KAAKW,MAApEiB,EAAP,EAAOA,YAAakB,EAApB,EAAoBA,WAAYd,EAAhC,EAAgCA,eAAgBC,EAAhD,EAAgDA,WAAYQ,EAA5D,EAA4DA,OAExDyB,EAAoBtC,EAAc,IAAM,EACxCkB,EAAWa,MAAM,IACjBb,EAAWa,MAAM,EAAG,IAMxB,OAJI3B,GAAkBC,GAAcQ,IAClCyB,EAAoBA,EAAkBzB,QAAO,SAAAzB,GAAS,OAAIA,EAAUgB,GAAgBmC,cAAcC,SAASnC,EAAWkC,mBAItH,qCACE,6BACGD,EAAkB1B,KAAI,SAAAxB,GAAS,OAC9B,oBACEZ,UAAU,sBADZ,SAGE,cAAC,EAAD,CAAWY,UAAWA,KADjBA,EAAUqD,SAKrB,cAAC,EAAD,CACE/B,QAAS,CAAC,UAAW,SAAU,UAC/BM,cAAe5C,KAAKgE,cAEtB,cAAC,EAAD,CACEpC,YAAaA,EACbD,aAAc3B,KAAK8D,WACnBjC,WAAoC,EAAxB7B,KAAKW,MAAMkB,oBA/EjC,GAAgCrB,IAAMC,W,wBCDzB6D,EAAb,4MACE3D,MAAQ,CACN4D,SAAU,GACVrB,KAAM,EACNrB,WAAY,EACZY,QAAO,EACPT,eAAgB,GAChBC,WAAY,IAPhB,EAUE+B,YAAc,SAACvB,EAAQwB,GACrB,EAAKnD,SAAS,CACZ2B,OAAQwB,EACRjC,eAAgBS,EAAOT,eACvBC,WAAYQ,EAAOR,cAdzB,EAqCE6B,WAAa,SAACZ,GACZ,EAAKpC,SAAS,CAACoC,KAAMA,KAtCzB,wFAkBE,WAAkBA,GAAlB,iCAAAsB,EAAA,6DAAwBC,EAAxB,+BAAwC,GAAxC,SACuBtB,MAAM,gDAAD,OAAiDD,IAD7E,cACMG,EADN,gBAEuBA,EAASC,OAFhC,OAEMiB,EAFN,OAIQG,EAJR,sBAI4BD,GAJ5B,YAI8CF,EAASf,UACjDe,EAASd,KAAKC,KAChB1D,KAAK2E,YAAYzB,EAAO,EAAGwB,GAE3B1E,KAAKc,SAAS,CACZyD,SAAS,YAAKG,GACd7C,WAAY+C,KAAKC,KAAKN,EAASd,KAAKqB,MAAQ,MAVlD,gDAlBF,sFAiCE,WACE9E,KAAK2E,YAAY,KAlCrB,oBAyCE,WACE,MAAyE3E,KAAKW,MAAvEuC,EAAP,EAAOA,KAAMrB,EAAb,EAAaA,WAAY0C,EAAzB,EAAyBA,SAAUvC,EAAnC,EAAmCA,eAAgBC,EAAnD,EAAmDA,WAAYQ,EAA/D,EAA+DA,OAC3DsC,EAAmBR,EAASZ,MAAmB,IAAZT,EAAO,GAAgB,GAAPA,GAMvD,OAJIlB,GAAkBC,GAAcQ,IAClCsC,EAAmBA,EAAiBtC,QAAO,SAAAzB,GAAS,OAAIA,EAAUgB,GAAgBmC,cAAcC,SAASnC,EAAWkC,mBAIpH,qCACE,kCACE,gCACE,6BACG,CAAC,OAAQ,WAAY,WAAW3B,KAAI,SAACwC,GAAD,OACnC,6BACGA,GADMA,UAOf,gCACGD,EAAiBvC,KAAI,SAACyC,GAAD,OACpB,+BACE,6BACGA,EAAQhE,OAEX,6BACGgE,EAAQC,WAEX,6BACGD,EAAQA,YARJA,EAAQZ,YAgBvB,cAAC,EAAD,CACE/B,QAAS,CAAC,QACVM,cAAe5C,KAAKgE,cAEtB,cAAC,EAAD,CACEpC,YAAasB,EACbvB,aAAc3B,KAAK8D,WACnBjC,WAAYA,WAvFtB,GAA8BrB,IAAMC,WCC9B0E,E,4MACJxE,MAAQ,CACNyE,YAAa,c,4CAGf,WAAW,IAAD,OACDA,EAAepF,KAAKW,MAApByE,YAEP,OACE,qCACE,wBAAQ/E,QAAS,kBAAM,EAAKS,SAAS,CAACsE,YAAa,gBAAnD,wBAGA,wBAAQ/E,QAAS,kBAAM,EAAKS,SAAS,CAACsE,YAAa,cAAnD,sBAGiB,eAAhBA,EAA+B,cAAC,EAAD,IAAiB,cAAC,EAAD,W,GAhBvC5E,IAAMC,WAwBT0E,ICjBAE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7324db35.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Popup extends React.ComponentÂ {\n  render() {\n    const {closePopup, user} = this.props;\n    return (\n      <div className='popup'>\n        <div className='popup_inner' onClick={closePopup}>\n          {JSON.stringify(user, null, '\\t')}\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Popup } from '../Popup/Popup';\n\nexport class Character extends React.Component {\n  state = {\n    shopPopup: false,\n  }\n\n  togglePopup = () => {\n    this.setState({ showPopup: !this.state.showPopup})\n  }\n\n  render() {\n    const {name, status, species, gender, image} = this.props.character;\n    const {showPopup} = this.state;\n\n    return (\n      <div className=\"character-card\" onClick={this.togglePopup}>\n        <div classname=\"character-text\">\n          <div>\n            name - {name}\n          </div>\n          <div>\n            status - {status}\n          </div>\n          <div>\n            species - {species}\n          </div>\n          <div>\n            gender - {gender}\n          </div>\n        </div>\n        <img src={image} alt=\"character\" className=\"character-image\"/>\n        {showPopup &&\n          <Popup user={this.props.character} closePopup={this.togglePopup}/>\n        }\n      </div>\n      \n    )\n  }\n}","import React from 'react';\n\nexport class Pagination extends React.Component {\n  state = {\n    test: 1,\n  }\n\n  render() {\n    const onPageChange = this.props.onPageChange;\n    const currentPage = this.props.currentPage;\n    const totalPages = this.props.totalPages;\n\n    return (\n      <>\n        <button\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Prev\n        </button>\n        <button>{currentPage} of {totalPages}</button>\n        <button\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={currentPage === totalPages}\n        >\n          Next\n        </button>\n      </>\n    )\n  }\n}","import React from \"react\";\n\nexport class Filter extends React.Component {\n  state = {\n    selectedFilter:\"\",\n    filterText:\"\",\n  }\n\n  handleSelect = (e) => {\n    this.setState({selectedFilter: e.target.value})\n  }\n\n  render() {\n    const {filters} = this.props;\n\n    return (\n      <form>\n        <select\n          onChange={this.handleSelect}\n          value={this.state.selectedFilter}\n        >\n          <option value=\"\">\n            choose a filter\n          </option>\n          {filters.map((filter) => (\n            <option value={filter} key={filter}>\n              {filter}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"text\"\n          placeholder=\"type text\"\n          value={this.state.filterText}\n          onChange={(e) => this.setState({filterText: e.target.value})}\n        />\n        <button\n          type=\"button\"\n          onClick={() => this.props.onFilterApply(this.state, true)}\n        >\n          filter\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.props.onFilterApply(this.state, false)\n            this.setState({ \n              selectedFilter:\"\",\n              filterText:\"\",\n            })\n          }}  \n        >\n          reset\n        </button>\n      </form>\n    )\n  }\n}","import React from 'react';\nimport { Character } from '../Character_item/Character';\nimport { Pagination } from '../../UI/Pagination';\nimport { Filter } from '../../UI/Filter';\n\nexport class Characters extends React.Component {\n  state = {\n    characters: [],\n    currentPageApi: 1,\n    currentPage: 1,\n    totalPages: 0,\n    filter:false,\n    selectedFilter: '',\n    filterText: '',\n  }\n\n  getCharacters = (pageAPI, page) => {\n    fetch(`https://rickandmortyapi.com/api/character/?page=${pageAPI}`)\n      .then(response => response.json())\n      .then(result => (\n        \n        this.setState( {\n          characters: [...result.results],\n          currentPageApi: result.info.next.slice(result.info.next.lastIndexOf('page=') + 5) - 1,\n          totalPages: result.info.pages,\n          currentPage: page,\n        }) ))\n  };\n\n  componentDidMount() {\n    this.getCharacters(1, 1);\n  };\n\n  changePage = (page) => {\n    const pageToCheck = page % 2 === 0 ? page : page + 1;\n\n    if ((pageToCheck / 2) > this.state.currentPageApi) {\n      this.getCharacters(this.state.currentPageApi + 1, page);\n    } else {\n      if ((pageToCheck / 2) < this.state.currentPageApi) {\n        this.getCharacters(this.state.currentPageApi - 1, page)\n        } else {\n          this.setState({currentPage: page})\n        }\n    }\n  };\n\n  applyFilter = (filter, applyState) => {\n    this.setState({\n      filter: applyState,\n      selectedFilter: filter.selectedFilter,\n      filterText: filter.filterText,\n    })\n  }\n\n  render() {\n    const {currentPage, characters, selectedFilter, filterText, filter} = this.state;\n\n    let preparedCharArray = currentPage % 2 === 0\n      ? characters.slice(10)\n      : characters.slice(0, 10);\n\n    if (selectedFilter && filterText && filter) {\n      preparedCharArray = preparedCharArray.filter(character => character[selectedFilter].toLowerCase().includes(filterText.toLowerCase()) )\n    }\n\n    return (\n      <>\n        <ul>\n          {preparedCharArray.map(character => (\n            <li\n              className=\"character-list-item\"\n              key={character.id}>\n              <Character character={character} />\n            </li>\n          ))}\n        </ul>\n        <Filter \n          filters={['species', 'gender', 'status']}\n          onFilterApply={this.applyFilter}\n        />\n        <Pagination\n          currentPage={currentPage}\n          onPageChange={this.changePage}\n          totalPages={this.state.totalPages * 2}\n        />\n      </>\n    )\n  }\n}","import React from 'react';\nimport { Pagination } from '../UI/Pagination';\nimport { Filter } from '../UI/Filter';\n\nexport class Episodes extends React.Component {\n  state = {\n    episodes: [],\n    page: 1,\n    totalPages: 1,\n    filter:false,\n    selectedFilter: '',\n    filterText: '',\n  }\n\n  applyFilter = (filter, applyState) => {\n    this.setState({\n      filter: applyState,\n      selectedFilter: filter.selectedFilter,\n      filterText: filter.filterText,\n    })\n  }\n\n  async getEpisodes(page, previousArray = []) {\n    let response = await fetch(`https://rickandmortyapi.com/api/episode?page=${page}`);\n    let episodes = await response.json();\n\n    const episodesArray = [...previousArray, ...episodes.results ]\n    if (episodes.info.next) {\n      this.getEpisodes(page + 1, episodesArray)\n    } else {\n      this.setState({\n        episodes: [...episodesArray],\n        totalPages: Math.ceil(episodes.info.count / 25),\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getEpisodes(1);\n  }\n\n  changePage = (page) => {\n    this.setState({page: page})\n  }\n\n  render() {\n    const {page, totalPages, episodes, selectedFilter, filterText, filter} = this.state;\n    let preparedEpisodes = episodes.slice((page - 1) * 25, page * 25);\n\n    if (selectedFilter && filterText && filter) {\n      preparedEpisodes = preparedEpisodes.filter(character => character[selectedFilter].toLowerCase().includes(filterText.toLowerCase()) )\n    }\n\n    return (\n      <>\n        <table>\n          <thead>\n            <tr>\n              {['name', 'air_date', 'episode'].map((fieldname) => (\n                <th key={fieldname}>\n                  {fieldname}\n                </th>\n              ) )\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {preparedEpisodes.map((episode) => (\n              <tr key={episode.id}>\n                <td>\n                  {episode.name}\n                </td>\n                <td>\n                  {episode.air_date}\n                </td>\n                <td>\n                  {episode.episode}\n                </td> \n              </tr>\n            ))\n            }\n          </tbody>\n            \n        </table>\n        <Filter \n          filters={['name']}\n          onFilterApply={this.applyFilter}\n        />\n        <Pagination \n          currentPage={page}\n          onPageChange={this.changePage}\n          totalPages={totalPages}\n        />\n      </>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\nimport { Characters } from './Component/Characters/Characters_list/Characters';\nimport { Episodes } from './Component/Episodes/Episodes';\n\nclass App extends React.Component {\n  state = {\n    selectedTab: 'Characters',\n  }\n\n  render () {\n    const {selectedTab} = this.state;\n\n    return (\n      <>\n        <button onClick={() => this.setState({selectedTab: 'Characters'})}>\n          Characters\n        </button>\n        <button onClick={() => this.setState({selectedTab: 'Episodes'})}>\n          Episodes\n        </button>\n        {selectedTab === 'Characters' ? <Characters /> : <Episodes />}\n        \n        </>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}